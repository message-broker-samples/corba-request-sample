
/**
* StockControlManagementSystemPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from StockControlInterface.idl
* Tuesday, 16 February 2010 00:39:54 o'clock GMT
* 
* Sample program for use with IBM Integration Bus
* © Copyright International Business Machines Corporation 2010 
* Licensed Materials - Property of IBM
*/

public abstract class StockControlManagementSystemPOA extends org.omg.PortableServer.Servant
                implements StockControlManagementSystemOperations, org.omg.CORBA.portable.InvokeHandler
{

  public StockControlManagementSystem _this() {
     return StockControlManagementSystemHelper.narrow(
        super._this_object());
  }

  public StockControlManagementSystem _this(org.omg.CORBA.ORB orb) {
     return StockControlManagementSystemHelper.narrow(
        super._this_object(orb));
  }

  public String[] _all_interfaces(
     org.omg.PortableServer.POA poa,
     byte[] objectId) {
         return (String[])__ids.clone();
  }

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:StockControlManagementSystem:1.0"};

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getSKU", new java.lang.Integer (0));
    _methods.put ("getSKUName", new java.lang.Integer (1));
    _methods.put ("addStock", new java.lang.Integer (2));
    _methods.put ("reduceStock", new java.lang.Integer (3));
    _methods.put ("getStockLevel", new java.lang.Integer (4));
    _methods.put ("getPrice", new java.lang.Integer (5));
    _methods.put ("setPrice", new java.lang.Integer (6));
    _methods.put ("createNewStockItem", new java.lang.Integer (7));
    _methods.put ("deleteStockItem", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // StockControlManagementSystem/getSKU
       {
         try {
           String name = in.read_string ();
           int __result = (int)0;
           __result = this.getSKU (name);
           out = $rh.createReply();
           out.write_long (__result);
         } catch (InvalidSKUName __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUNameHelper.write (out, __ex);
         }
         break;
       }

       case 1:  // StockControlManagementSystem/getSKUName
       {
         try {
           int sku = in.read_long ();
           String __result = null;
           __result = this.getSKUName (sku);
           out = $rh.createReply();
           out.write_string (__result);
         } catch (InvalidSKU __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUHelper.write (out, __ex);
         }
         break;
       }

       case 2:  // StockControlManagementSystem/addStock
       {
         try {
           int sku = in.read_long ();
           int number = in.read_long ();
           org.omg.CORBA.IntHolder quantity = new org.omg.CORBA.IntHolder ();
           this.addStock (sku, number, quantity);
           out = $rh.createReply();
           out.write_long (quantity.value);
         } catch (InvalidSKU __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUHelper.write (out, __ex);
         }
         break;
       }

       case 3:  // StockControlManagementSystem/reduceStock
       {
         try {
           int sku = in.read_long ();
           int number = in.read_long ();
           org.omg.CORBA.IntHolder quantity = new org.omg.CORBA.IntHolder ();
           this.reduceStock (sku, number, quantity);
           out = $rh.createReply();
           out.write_long (quantity.value);
         } catch (InvalidSKU __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUHelper.write (out, __ex);
         } catch (InvalidQTY __ex) {
           out = $rh.createExceptionReply ();
           InvalidQTYHelper.write (out, __ex);
         }
         break;
       }

       case 4:  // StockControlManagementSystem/getStockLevel
       {
         try {
           int sku = in.read_long ();
           int __result = (int)0;
           __result = this.getStockLevel (sku);
           out = $rh.createReply();
           out.write_long (__result);
         } catch (InvalidSKU __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUHelper.write (out, __ex);
         }
         break;
       }

       case 5:  // StockControlManagementSystem/getPrice
       {
         try {
           int sku = in.read_long ();
           double __result = (double)0;
           __result = this.getPrice (sku);
           out = $rh.createReply();
           out.write_double (__result);
         } catch (InvalidSKU __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUHelper.write (out, __ex);
         }
         break;
       }

       case 6:  // StockControlManagementSystem/setPrice
       {
         try {
           int sku = in.read_long ();
           double price = in.read_double ();
           this.setPrice (sku, price);
           out = $rh.createReply();
         } catch (InvalidSKU __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUHelper.write (out, __ex);
         }
         break;
       }

       case 7:  // StockControlManagementSystem/createNewStockItem
       {
         try {
           String name = in.read_string ();
           org.omg.CORBA.IntHolder sku = new org.omg.CORBA.IntHolder ();
           sku.value = in.read_long ();
           this.createNewStockItem (name, sku);
           out = $rh.createReply();
           out.write_long (sku.value);
         } catch (InvalidSKU __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUHelper.write (out, __ex);
         } catch (SKUNameAlreadyExist __ex) {
           out = $rh.createExceptionReply ();
           SKUNameAlreadyExistHelper.write (out, __ex);
         }
         break;
       }

       case 8:  // StockControlManagementSystem/deleteStockItem
       {
         try {
           int sku = in.read_long ();
           this.deleteStockItem (sku);
           out = $rh.createReply();
         } catch (InvalidSKU __ex) {
           out = $rh.createExceptionReply ();
           InvalidSKUHelper.write (out, __ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke


} // class _StockControlManagementSystemPOA
