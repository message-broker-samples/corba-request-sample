/*
Sample program for use with IBM Integration Bus
Â© Copyright International Business Machines Corporation 2010, 2010 
Licensed Materials - Property of IBM
*/

CREATE COMPUTE MODULE StockWarehouseClient_RouteOperation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE operation CHARACTER;
		SET operation = FIELDNAME(InputRoot.DataObject.*[>]);
		SET OutputLocalEnvironment.Destination.RouterList.DestinationData[1].labelName = SUBSTRING(operation AFTER 'StockControlManagementSystem.');
		SET OutputLocalEnvironment.RequestData = InputBody;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE StockWarehouseClient_SetPriceOperation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET OutputLocalEnvironment.ResponseData = InputLocalEnvironment.ResponseData;
		SET OutputLocalEnvironment.ResponseData."StockControlManagementSystem.createNewStockItemResponse" = InputBody."StockControlManagementSystem.createNewStockItemResponse";
		SET OutputLocalEnvironment.RequestData."StockControlManagementSystem.setPrice" = InputLocalEnvironment.RequestData."StockControlManagementSystem.createNewStockItem";
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE StockWarehouseClient_GetPriceOperation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET OutputLocalEnvironment.ResponseData = InputLocalEnvironment.ResponseData;
		SET OutputLocalEnvironment.ResponseData."StockControlManagementSystem.getSKUResponse" = InputBody."StockControlManagementSystem.getSKUResponse";
		SET OutputLocalEnvironment.RequestData."StockControlManagementSystem.getPrice" = InputLocalEnvironment.RequestData."StockControlManagementSystem.getSKU";
		SET OutputLocalEnvironment.RequestData."StockControlManagementSystem.getPrice".sku = InputBody."StockControlManagementSystem.getSKUResponse".*;		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE StockWarehouseClient_GetStockLevelOperation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET OutputLocalEnvironment.ResponseData = InputLocalEnvironment.ResponseData;
		SET OutputLocalEnvironment.ResponseData."StockControlManagementSystem.getPriceResponse" = InputBody."StockControlManagementSystem.getPriceResponse";
		SET OutputLocalEnvironment.RequestData."StockControlManagementSystem.getStockLevel" = InputLocalEnvironment.RequestData."StockControlManagementSystem.getPrice";
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE StockWarehouseClient_getStockItemResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET OutputLocalEnvironment.ResponseData = InputLocalEnvironment.ResponseData;
		SET OutputLocalEnvironment.ResponseData."StockControlManagementSystem.getStockLevelResponse" = InputBody."StockControlManagementSystem.getStockLevelResponse";		
		SET OutputRoot.DataObject.ResponseData = OutputLocalEnvironment.ResponseData;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE StockWarehouseClient_createStockItemResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET OutputLocalEnvironment.ResponseData = InputLocalEnvironment.ResponseData;
		SET OutputRoot.DataObject = OutputLocalEnvironment.ResponseData;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


